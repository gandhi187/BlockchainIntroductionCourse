package de.sharma.ntublock;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class PJ2 extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_BONUS = "Bonus";

    public static final String FUNC_ID2P2HEX = "ID2P2Hex";

    public static final String FUNC_ID2P3HEX = "ID2P3Hex";

    public static final String FUNC_ID2ADDRESS = "ID2address";

    public static final String FUNC_PROBLEM1 = "Problem1";

    public static final String FUNC_PROBLEM2 = "Problem2";

    public static final String FUNC_PROBLEM3 = "Problem3";

    public static final String FUNC_ISBONUSSUBMIT = "isBonusSubmit";

    public static final String FUNC_ISP1SUBMIT = "isP1Submit";

    public static final String FUNC_ISP2SUBMIT = "isP2Submit";

    public static final String FUNC_ISP3SUBMIT = "isP3Submit";

    public static final String FUNC_SCORE = "score";

    @Deprecated
    protected PJ2(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PJ2(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PJ2(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PJ2(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> Bonus(String ID, BigInteger key) {
        final Function function = new Function(
                FUNC_BONUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ID), 
                new org.web3j.abi.datatypes.generated.Uint8(key)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> ID2P2Hex(String param0) {
        final Function function = new Function(FUNC_ID2P2HEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> ID2P3Hex(String param0) {
        final Function function = new Function(FUNC_ID2P3HEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> ID2address(String param0) {
        final Function function = new Function(FUNC_ID2ADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> Problem1(String ID, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_PROBLEM1, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<TransactionReceipt> Problem2(String ID, String HashedHex, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_PROBLEM2, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ID), 
                new org.web3j.abi.datatypes.Utf8String(HashedHex)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<TransactionReceipt> Problem3(String ID, String HashedHex, String yourContract) {
        final Function function = new Function(
                FUNC_PROBLEM3, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ID), 
                new org.web3j.abi.datatypes.Utf8String(HashedHex), 
                new org.web3j.abi.datatypes.Address(yourContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> isBonusSubmit(String param0) {
        final Function function = new Function(FUNC_ISBONUSSUBMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isP1Submit(String param0) {
        final Function function = new Function(FUNC_ISP1SUBMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isP2Submit(String param0) {
        final Function function = new Function(FUNC_ISP2SUBMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isP3Submit(String param0) {
        final Function function = new Function(FUNC_ISP3SUBMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> score(String param0) {
        final Function function = new Function(FUNC_SCORE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static PJ2 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PJ2(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PJ2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PJ2(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PJ2 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PJ2(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PJ2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PJ2(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PJ2> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PJ2.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PJ2> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PJ2.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<PJ2> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(PJ2.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<PJ2> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(PJ2.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
